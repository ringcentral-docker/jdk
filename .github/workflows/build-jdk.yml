name: Build OpenJDK Images

on:
  push:
    branches:
      - master
    paths:
      - 'jdk*/*'
      - '.github/workflows/build-jdk.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jdk_version: [8, 11, 17, 21, 17-docker, 17-jacoco]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: linux/amd64,linux/arm64,darwin/amd64,darwin/arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker login
      env:
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
        echo $GITHUB_TOKEN | docker login ghcr.io --username $GITHUB_ACTOR --password-stdin

    - name: Set Environment Variables
      id: vars
      run: |
        JDK_DIR=jdk${{ matrix.jdk_version }}
        if [[ -f ${JDK_DIR}/Dockerfile ]]; then
          VERSION=$(awk -F= '/JAVA_VERSION=/ {print $2}' ${JDK_DIR}/Dockerfile | cut -d " " -f 1)
          DETAIL_VERSION=$(awk -F= '/JAVA_DETAIL_VERSION=/ {print $2}' ${JDK_DIR}/Dockerfile | cut -d " " -f 1)
          echo $VERSION > ${JDK_DIR}/version.txt
          echo $DETAIL_VERSION > ${JDK_DIR}/detail_version.txt
        else
          VERSION=$(cat ${JDK_DIR}/version.txt)
          DETAIL_VERSION=$(cat ${JDK_DIR}/detail_version.txt)
        fi
        
        # Add suffix for docker and jacoco versions to avoid naming conflicts
        if [[ "${{ matrix.jdk_version }}" == *"-docker" ]]; then
          VERSION="${VERSION}-docker"
          DETAIL_VERSION="${DETAIL_VERSION}-docker"
        elif [[ "${{ matrix.jdk_version }}" == *"-jacoco" ]]; then
          VERSION="${VERSION}-jacoco"
          DETAIL_VERSION="${DETAIL_VERSION}-jacoco"
        fi
        
        echo "JDK_DIR=${JDK_DIR}" >> $GITHUB_ENV
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        echo "DETAIL_VERSION=${DETAIL_VERSION}" >> $GITHUB_ENV

    - name: Build and Push Multi-Platform Docker Images
      run: |
        IMAGE_NAME=ringcentral/jdk
        GH_DOCKER_PKG_IMAGE_NAME=ghcr.io/ringcentral-docker/jdk/jdk
        BASE_IMAGE="noble"
        
        # Define platforms for multi-platform build
        PLATFORMS="linux/amd64,linux/arm64,darwin/amd64,darwin/arm64"
        
        # Prepare all tags for Docker Hub
        DOCKER_HUB_TAGS=""
        DOCKER_HUB_TAGS="${DOCKER_HUB_TAGS} --tag ${IMAGE_NAME}:${VERSION}"
        DOCKER_HUB_TAGS="${DOCKER_HUB_TAGS} --tag ${IMAGE_NAME}:${VERSION}-${BASE_IMAGE}"
        DOCKER_HUB_TAGS="${DOCKER_HUB_TAGS} --tag ${IMAGE_NAME}:${DETAIL_VERSION}"
        DOCKER_HUB_TAGS="${DOCKER_HUB_TAGS} --tag ${IMAGE_NAME}:${DETAIL_VERSION}-${BASE_IMAGE}"
        
        # Prepare all tags for GitHub Container Registry
        GH_TAGS=""
        GH_TAGS="${GH_TAGS} --tag ${GH_DOCKER_PKG_IMAGE_NAME}:${VERSION}"
        GH_TAGS="${GH_TAGS} --tag ${GH_DOCKER_PKG_IMAGE_NAME}:${VERSION}-${BASE_IMAGE}"
        GH_TAGS="${GH_TAGS} --tag ${GH_DOCKER_PKG_IMAGE_NAME}:${DETAIL_VERSION}"
        GH_TAGS="${GH_TAGS} --tag ${GH_DOCKER_PKG_IMAGE_NAME}:${DETAIL_VERSION}-${BASE_IMAGE}"
        
        # Add latest tags for JDK 17 variants
        if [ "${{ matrix.jdk_version }}" -eq 17 ] || [ "${{ matrix.jdk_version }}" = "17-docker" ] || [ "${{ matrix.jdk_version }}" = "17-jacoco" ]; then
          DOCKER_HUB_TAGS="${DOCKER_HUB_TAGS} --tag ${IMAGE_NAME}:latest"
          GH_TAGS="${GH_TAGS} --tag ${GH_DOCKER_PKG_IMAGE_NAME}:latest"
        fi
        
        # Build and push to Docker Hub (single build with all tags)
        docker buildx build \
          --platform ${PLATFORMS} \
          ${DOCKER_HUB_TAGS} \
          --file ${JDK_DIR}/Dockerfile \
          --push \
          .
        
        # Build and push to GitHub Container Registry (single build with all tags)
        docker buildx build \
          --platform ${PLATFORMS} \
          ${GH_TAGS} \
          --file ${JDK_DIR}/Dockerfile \
          --push \
          .

    - name: Generate README Update
      run: |
        BASE_IMAGE="noble"
        IMAGE_NAME=ringcentral/jdk
        GH_DOCKER_PKG_IMAGE_NAME=ghcr.io/ringcentral-docker/jdk/jdk

        NEW_ENTRY="| JDK${{ matrix.jdk_version }} | ${VERSION} | \`${IMAGE_NAME}:${VERSION}\` \`${IMAGE_NAME}:${VERSION}-${BASE_IMAGE}\` \`${IMAGE_NAME}:${DETAIL_VERSION}\` \`${IMAGE_NAME}:${DETAIL_VERSION}-${BASE_IMAGE}\` | \`${GH_DOCKER_PKG_IMAGE_NAME}:${VERSION}\` \`${GH_DOCKER_PKG_IMAGE_NAME}:${VERSION}-${BASE_IMAGE}\` \`${GH_DOCKER_PKG_IMAGE_NAME}:${DETAIL_VERSION}\` \`${GH_DOCKER_PKG_IMAGE_NAME}:${DETAIL_VERSION}-${BASE_IMAGE}\` |"
        echo "${NEW_ENTRY}" > readme_updates_${{ matrix.jdk_version }}.txt

    - name: Upload README Update
      uses: actions/upload-artifact@v4
      with:
        name: readme-updates-${{ matrix.jdk_version }}
        path: readme_updates_${{ matrix.jdk_version }}.txt

  update-readme:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download README Updates
      uses: actions/download-artifact@v4
      with:
        name: readme-updates-8
        path: ./readme-updates
    - name: Download README Updates
      uses: actions/download-artifact@v4
      with:
        name: readme-updates-11
        path: ./readme-updates
    - name: Download README Updates
      uses: actions/download-artifact@v4
      with:
        name: readme-updates-17
        path: ./readme-updates
    - name: Download README Updates
      uses: actions/download-artifact@v4
      with:
        name: readme-updates-21
        path: ./readme-updates
    - name: Download README Updates
      uses: actions/download-artifact@v4
      with:
        name: readme-updates-17-docker
        path: ./readme-updates
    - name: Download README Updates
      uses: actions/download-artifact@v4
      with:
        name: readme-updates-17-jacoco
        path: ./readme-updates

    - name: Initialize README
      run: |
        echo "| JDK Version | Version | Docker Hub | GitHub Package |" > README.md
        echo "|-------------|---------|------------|----------------|" >> README.md
    - name: Update README
      run: |
        for file in ./readme-updates/readme_updates_*.txt; do
          while IFS= read -r line; do
            JDK_VERSION=$(echo $line | cut -d' ' -f2)
            if grep -q "JDK${JDK_VERSION}" README.md; then
              sed -i "/JDK${JDK_VERSION}/c\\$line" README.md
            else
              echo "$line" >> README.md
            fi
          done < "$file"
        done

    - name: Commit README Update
      run: |
        git config --global user.name 'john.lin'
        git config --global user.email 'john.lin@ringcentral.com'
        git add README.md
        git commit -m "Update README with Docker image info"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}